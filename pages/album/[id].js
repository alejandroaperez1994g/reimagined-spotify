import { useRouter } from 'next/router';
import Head from 'next/head';
import { useEffect, useState } from 'react';

import AppLayout from '../../components/AppLayout';
import Sidebar from '../../components/Sidebar';
import MainSectionLayout from '../../components/MainSectionLayout';
import Navbar from '../../components/Navbar';
import CentralLayout from '../../components/CentralLayout';
import AlbumDetails from '../../components/AlbumDetails';
import getAlbumInfo from '../../services/getAlbumInfo';
import getAccesToken from '../../services/getAccesToken';
import getNewReleases from '../../services/getNewReleases';

import getAlbumTracks from '../../services/getAlbumTracks';

import styles from './styles.module.css';
import getArtistInfo from '../../services/getArtistInfo';

const Album = ({ albumTracks, albumInfo, artistInfo }) => {
  const router = useRouter();
  console.log(artistInfo);
  return (
    <div className={styles.container}>
      <Head>
        <title>Devify Albums</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/spotify-logo.ico" />
      </Head>
      <AppLayout>
        <Sidebar />
        <MainSectionLayout>
          <Navbar />
          <CentralLayout>
            <AlbumDetails
              tracks={albumTracks.items}
              albumInfo={albumInfo}
              artistInfo={artistInfo}
            />
          </CentralLayout>
        </MainSectionLayout>
      </AppLayout>
    </div>
  );
};

export const getStaticPaths = async () => {
  const { access_token, token_type } = await getAccesToken();
  const albumsData = await getNewReleases(token_type, access_token);

  const paths = albumsData.albums.items.map((album) => {
    return {
      params: { id: album.id.toString() },
    };
  });

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps = async (context) => {
  const id = context.params.id;
  const albumTracks = await getAlbumTracks(id);
  const albumInfo = await getAlbumInfo(id);
  const artistID = albumInfo.artists[0].id;
  const artistInfo = await getArtistInfo(artistID);

  return {
    props: { id, albumTracks, albumInfo, artistInfo },
  };
};

export default Album;
